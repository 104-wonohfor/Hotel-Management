/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import java.util.Date;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableCellRenderer;

import dao.InvoiceDAO;
import dao.PersonDAO;
import dao.RoomBookingDAO;
import dao.RoomDAO;
import dao.RoomGuestDAO;
import dao.ServiceDAO;
import model.Invoice;
import model.Person;
import model.Room;
import model.RoomBooking;
import model.Service;
import types.BookingStatus;
import types.RoomStatus;

/**
 *
 * @author kien5258
 */
public class CheckOut extends javax.swing.JFrame {

    private String userID;

    public CheckOut() {
        setTitle("Check Out");
        getContentPane().setBackground(java.awt.Color.DARK_GRAY);
        initComponents();
        loadTableForCheckOut();
        loadCheckOutField();
    }

    public CheckOut(String userID) {
        this.userID = userID;
        System.out.println("Check Out: " + userID);

        setTitle("Check Out");
        getContentPane().setBackground(java.awt.Color.DARK_GRAY);
        initComponents();
        loadTableForCheckOut();
        loadCheckOutField();
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        checkOutButton = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        guestNameFld = new javax.swing.JTextField();
        UsernameTxt = new javax.swing.JLabel();
        UsernameTxt1 = new javax.swing.JLabel();
        phoneField = new javax.swing.JTextField();
        checkOutTimeFld = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        printInvoceButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 200, 0, 0));

        backButton.setText("Back");
        backButton.setFocusable(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        checkOutButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        checkOutButton.setText("CheckOut");
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButtonActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        guestNameFld.setDisabledTextColor(java.awt.Color.black);
        guestNameFld.setEnabled(false);

        UsernameTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        UsernameTxt.setForeground(new java.awt.Color(215, 210, 203));
        UsernameTxt.setText("Guest Name");

        UsernameTxt1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        UsernameTxt1.setForeground(new java.awt.Color(215, 210, 203));
        UsernameTxt1.setText("Phone");

        phoneField.setDisabledTextColor(java.awt.Color.black);
        phoneField.setEnabled(false);

        checkOutTimeFld.setDisabledTextColor(java.awt.Color.black);
        checkOutTimeFld.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(215, 210, 203));
        jLabel1.setText("Time Checkout");

        printInvoceButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        printInvoceButton.setText("Print Invoice");
        printInvoceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printInvoceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(checkOutTimeFld, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(UsernameTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(printInvoceButton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(UsernameTxt)
                                        .addGap(41, 41, 41)
                                        .addComponent(guestNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(203, 203, 203)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkOutButton))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkOutTimeFld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkOutButton)
                    .addComponent(printInvoceButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadTableForCheckOut(){
        if (userID.startsWith("G")) {
            RoomBookingDAO roomBookingDAO = new RoomBookingDAO();
            jTable2.setModel(roomBookingDAO.getRoomBooking("Only Checked In", userID));

        } else {
            RoomBookingDAO roomBookingDAO = new RoomBookingDAO();
            jTable2.setModel(roomBookingDAO.getRoomBooking("Only Checked In"));
        }
    }

    private void loadCheckOutField(){
        java.util.Date date = new java.util.Date();
        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm");
        checkOutTimeFld.setText(sdf.format(date));
    }

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        // if userID starts with "G" then back to DashboardGuest, with "R" then back to DashboardReceptionist, with "M" then back to DashboardManager
        if (userID.startsWith("G")) {
            new DashboardGuest(userID).setVisible(true);
        } else if (userID.startsWith("R")) {
            try {
                new DashboardReceptionist(userID).setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (userID.startsWith("M")) {
            try {
                new DashboardManager(userID).setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        // TODO add your handling code here:
        int row = jTable2.getSelectedRow();
        String guestID = jTable2.getValueAt(row, 7).toString();

        Person person = new PersonDAO().getPersonByID(guestID);
        guestNameFld.setText(person.getName());
        phoneField.setText(person.getPhone());
    }//GEN-LAST:event_jTable2MousePressed

    private void printInvoceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printInvoceButtonActionPerformed
        // TODO add your handling code here:
        int row = jTable2.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to print invoice!");
            return;
        }

        int bookingID = Integer.parseInt(jTable2.getValueAt(row, 0).toString());
        Invoice invoice = new InvoiceDAO().getInvoiceByBookingID(bookingID);
        List<Service> services = new ServiceDAO().getCompledteServicesByBookingID(bookingID);


        

        JFrame invoiceFrame = new JFrame("Invoice");
        invoiceFrame.setLayout(new BoxLayout(invoiceFrame.getContentPane(), BoxLayout.Y_AXIS));
        
        JTextArea textArea = new JTextArea();
        textArea.setEditable(false);
        textArea.append("Invoice ID: " + invoice.getInvoiceID() + "\n");
        invoiceFrame.add(textArea);
        
        double totalServiceAmount = 0;
        String[][] data = new String[services.size() + 2][2];
        int i = 0;
        
        for (Service service : services) {
            totalServiceAmount += service.getServiceAmount();
            String description = service.getDescription();
            description = description.split(" - ")[0];
            data[i][0] = description;
            data[i][1] = String.valueOf(service.getServiceAmount());
            i++;
        }
        
        data[i][0] = "Room Price";
        data[i][1] = String.valueOf(invoice.getTotalAmount() - totalServiceAmount);
        i++;
        
        data[i][0] = "Total Amount";
        data[i][1] = String.valueOf(invoice.getTotalAmount());
        
        String[] columnNames = {"Description", "Price"};
        JTable table = new JTable(data, columnNames) {
            public boolean isCellEditable(int row, int column) {                
                return false;  // make JTable uneditable
            };
        };
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        table.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        JScrollPane scrollPane = new JScrollPane(table);
        invoiceFrame.add(scrollPane);
        
        JTextArea thankYouText = new JTextArea();
        thankYouText.setEditable(false);
        thankYouText.append("Thank you!\n");

        invoiceFrame.add(thankYouText);
        invoiceFrame.setSize(400, 300);
        invoiceFrame.setLocationRelativeTo(null);  // center the JFrame on the screen
        invoiceFrame.setVisible(true);
    }//GEN-LAST:event_printInvoceButtonActionPerformed

    private void checkOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButtonActionPerformed
        // TODO add your handling code here:
        int row = jTable2.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to check out!");
            return;
        }

        int bookingID = Integer.parseInt(jTable2.getValueAt(row, 0).toString());
        
        RoomBookingDAO roomBookingDAO = new RoomBookingDAO();
        RoomBooking roomBooking = roomBookingDAO.getRoomBookingByBookingID(bookingID);
        roomBooking.setBookingStatus(BookingStatus.CHECKED_OUT);
        roomBooking.setCheckOut(new Date());

        InvoiceDAO invoiceDAO = new InvoiceDAO();
        Invoice invoice = new InvoiceDAO().getInvoiceByBookingID(bookingID);
        invoice.setPaymentStatus(types.PaymentStatus.PAID);

        RoomDAO roomDAO = new RoomDAO();
        Room room = roomDAO.getRoomByRoomNumber(roomBooking.getRoomNumber());
        room.setRoomStatus(RoomStatus.AVAILABLE);
        try {
            roomBookingDAO.updateRoomBooking(bookingID, roomBooking);
            invoiceDAO.updateInvoice(invoice);
            new RoomGuestDAO().deleteRoomGuestByRoomNumber(roomBooking.getRoomNumber());
            new RoomDAO().updateRoom(room);

            JOptionPane.showMessageDialog(null, "Check out successfully!");
            loadTableForCheckOut();
            guestNameFld.setText("");
            phoneField.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Check out failed!");
        }
    }//GEN-LAST:event_checkOutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UsernameTxt;
    private javax.swing.JLabel UsernameTxt1;
    private javax.swing.JButton backButton;
    private javax.swing.JToggleButton checkOutButton;
    private javax.swing.JTextField checkOutTimeFld;
    private javax.swing.JTextField guestNameFld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField phoneField;
    private javax.swing.JToggleButton printInvoceButton;
    // End of variables declaration//GEN-END:variables
}
