/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

import model.Guest;
import model.Room;
import model.RoomBooking;
import model.Person;

import java.util.List;

import java.sql.Date;


import dao.RoomDAO;
import dao.RoomBookingDAO;
import dao.PersonDAO;
import dao.RequestDAO;
import dao.AccountDAO;
import dao.GuestDAO;

import java.text.SimpleDateFormat;

import types.AccountType;
import types.BookingStatus;

/**
 *
 * @author Thang
 */
public class BookRoom extends javax.swing.JFrame {

    private String userID;

    public BookRoom() {
        setTitle("Book Room");
        getContentPane().setBackground(java.awt.Color.DARK_GRAY);
        initComponents();
    }

    public BookRoom(String userID) {
        this.userID = userID;
        System.out.println("Book Room: " + userID);

        setTitle("Book Room");
        getContentPane().setBackground(java.awt.Color.DARK_GRAY);
        initComponents();
        setGuestInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        fullnameFld = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        AddressFld = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        emailFld = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        phoneField = new javax.swing.JTextField();
        createBookingButton = new javax.swing.JButton();
        clearAllButton = new javax.swing.JButton();
        jLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        roomNumberField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        styleBox = new javax.swing.JComboBox<>();
        bedsBox = new javax.swing.JComboBox<>();
        findRoomButton = new javax.swing.JButton();
        startDateChooser = new com.toedter.calendar.JDateChooser();
        endDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 200, 0, 0));
        setResizable(false);

        backButton.setText("Back");
        backButton.setFocusable(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Fullname :");

        fullnameFld.setBackground(java.awt.Color.darkGray);
        fullnameFld.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        fullnameFld.setForeground(new java.awt.Color(219, 226, 233));
        fullnameFld.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(128, 128, 128)));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Address :");

        AddressFld.setBackground(java.awt.Color.darkGray);
        AddressFld.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        AddressFld.setForeground(new java.awt.Color(219, 226, 233));
        AddressFld.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(128, 128, 128)));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Email :");

        emailFld.setBackground(java.awt.Color.darkGray);
        emailFld.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        emailFld.setForeground(new java.awt.Color(219, 226, 233));
        emailFld.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(128, 128, 128)));

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Phone :");

        phoneField.setBackground(java.awt.Color.darkGray);
        phoneField.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        phoneField.setForeground(new java.awt.Color(219, 226, 233));
        phoneField.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(128, 128, 128)));

        createBookingButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        createBookingButton.setText("Create Booking");
        createBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBookingButtonActionPerformed(evt);
            }
        });

        clearAllButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        clearAllButton.setText("Clear All");
        clearAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllButtonActionPerformed(evt);
            }
        });

        jLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel.setForeground(new java.awt.Color(215, 210, 203));
        jLabel.setText("Start Date");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(215, 210, 203));
        jLabel1.setText("End Date");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(215, 210, 203));
        jLabel2.setText("Style");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(215, 210, 203));
        jLabel7.setText("Bed(s)");

        roomNumberField.setDisabledTextColor(java.awt.Color.black);
        roomNumberField.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(215, 210, 203));
        jLabel8.setText("Price");

        priceField.setDisabledTextColor(java.awt.Color.black);
        priceField.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(215, 210, 203));
        jLabel9.setText("Room Number");

        styleBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "STANDARD", "DELUXE", "BUSINESS_SUITE" }));
        styleBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                styleBoxActionPerformed(evt);
            }
        });

        bedsBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));
        bedsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedsBoxActionPerformed(evt);
            }
        });

        findRoomButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        findRoomButton.setText("Find Room");
        findRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findRoomButtonActionPerformed(evt);
            }
        });

        startDateChooser.setDateFormatString("yyyy-MM-dd");
        startDateChooser.setMinSelectableDate(new java.util.Date());
        startDateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                startDateChooserPropertyChange(evt);
            }
        });

        endDateChooser.setDateFormatString("yyyy-MM-dd");
        endDateChooser.setMinSelectableDate(new java.util.Date());
        endDateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                endDateChooserPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fullnameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailFld, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddressFld, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(roomNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                .addGap(122, 122, 122)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(styleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bedsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(endDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(createBookingButton)
                        .addGap(80, 80, 80)
                        .addComponent(clearAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(397, 397, 397)
                        .addComponent(findRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(endDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(styleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bedsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(findRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jLabel3))
                        .addComponent(fullnameFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jLabel4))
                        .addComponent(AddressFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jLabel5))
                        .addComponent(emailFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBookingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setGuestInfo(){
        if (!userID.startsWith("G")) {
            return;
        }

        Person person = new PersonDAO().getPersonByID(userID);
        fullnameFld.setText(person.getName());
        AddressFld.setText(person.getAddress());
        emailFld.setText(person.getEmail());
        phoneField.setText(person.getPhone());

        // make editable false
        fullnameFld.setEditable(false);
        AddressFld.setEditable(false);
        emailFld.setEditable(false);
        phoneField.setEditable(false);
    }

    private void clearSomeFields() {
        roomNumberField.setText("");
        priceField.setText("");
    }

    private void findRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findRoomButtonActionPerformed
        // TODO add your handling code here:
        // startDate and endDate
        clearSomeFields();
        if (startDateChooser.getDate() == null || endDateChooser.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");

        Date startDate = new Date(startDateChooser.getDate().getTime());
        Date endDate = new Date(endDateChooser.getDate().getTime());
        String style = styleBox.getSelectedItem().toString();
        int beds = Integer.parseInt(bedsBox.getSelectedItem().toString());

        if (sdf.format(startDate).equals(sdf.format(endDate)) || startDate.after(endDate)) {
            JOptionPane.showMessageDialog(null, "Start date must be before end date", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        RoomDAO roomDAO = new RoomDAO();
        RoomBookingDAO roomBookingDAO = new RoomBookingDAO();

        List<Room> availableRooms = roomDAO.findAvailableRooms(style, beds);
        if (availableRooms.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No available rooms found", "Alert", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean roomFound = false;
        for (Room room : availableRooms) {
            if (roomBookingDAO.isRoomAvailable(room.getRoomNumber(), startDate, endDate)) {
                JOptionPane.showMessageDialog(null, "We find a room for you!", "Success", JOptionPane.INFORMATION_MESSAGE);
                roomNumberField.setText(room.getRoomNumber());
                priceField.setText(String.valueOf(room.getBookingPrice()));
                roomFound = true;
                break;
            } 
        }

        if (!roomFound) {
            JOptionPane.showMessageDialog(null, "No available rooms found", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_findRoomButtonActionPerformed

    private void createBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBookingButtonActionPerformed
        // TODO add your handling code here:
        if (fullnameFld.getText().isEmpty() || AddressFld.getText().isEmpty() || 
            emailFld.getText().isEmpty() || phoneField.getText().isEmpty() || 
            roomNumberField.getText().isEmpty() || priceField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Date startDate = new Date(startDateChooser.getDate().getTime());
        Date endDate = new Date(endDateChooser.getDate().getTime());
        String roomNumber = roomNumberField.getText();
        String fullname = fullnameFld.getText();
        String address = AddressFld.getText();
        String email = emailFld.getText();
        String phone = phoneField.getText();

        String id;

        // Nếu người dùng đã tồn tại trong database thì lấy ID của người đó
        // Nếu không thì tạo mới một account, person và guest
        if (new PersonDAO().findPersonIDByPhone(phone) != null) {
            id = new PersonDAO().findPersonIDByPhone(phone);
        } else {
            id = new PersonDAO().generateId(AccountType.GUEST);
            Guest guest = null;
            try {
                guest = new Guest();
            } catch (Exception e) {
                e.printStackTrace();
            }
            guest.setID(id);
            guest.setUsername(phone);
            guest.setPassword(phone);
            guest.setName(fullname);
            guest.setAddress(address);
            guest.setEmail(email);
            guest.setPhone(phone);
            guest.setAccountType(AccountType.GUEST);
            guest.setTotalRoomCheckedIn(0);

            new AccountDAO().insertAccount(guest);
            new PersonDAO().insertPerson(guest);
            new GuestDAO().insertGuest(guest);
        }
        
        try {
            RoomBooking roomBooking = new RoomBooking();
            roomBooking.setRoomNumber(Integer.parseInt(roomNumber));
            roomBooking.setStartDate(startDate);
            roomBooking.setEndDate(endDate);
            roomBooking.setBookingStatus(BookingStatus.REQUESTED);
            roomBooking.setCheckIn(null);
            roomBooking.setCheckOut(null);
            roomBooking.setGuestID(id);

            new RoomBookingDAO().createBooking(roomBooking);
            new RequestDAO().insertRequest("A new room booking was created by " + fullname);

            Guest guest2 = new GuestDAO().getGuestByID(id);
            guest2.bookRoom();
    
            JOptionPane.showMessageDialog(null, "Booking created successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            clearSomeFields();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Booking failed: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createBookingButtonActionPerformed

    private void clearAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllButtonActionPerformed
        // TODO add your handling code here:
        clearSomeFields();
        startDateChooser.setDate(null);
        endDateChooser.setDate(null);
        styleBox.setSelectedIndex(0);
        bedsBox.setSelectedIndex(0);

        if (userID.startsWith("G")) {
            return;
        } 
        
        fullnameFld.setText("");
        AddressFld.setText("");
        emailFld.setText("");
        phoneField.setText("");

    }//GEN-LAST:event_clearAllButtonActionPerformed

    private void startDateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_startDateChooserPropertyChange
        // TODO add your handling code here:
        clearSomeFields();
    }//GEN-LAST:event_startDateChooserPropertyChange

    private void endDateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_endDateChooserPropertyChange
        // TODO add your handling code here:
        clearSomeFields();
    }//GEN-LAST:event_endDateChooserPropertyChange

    private void styleBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_styleBoxActionPerformed
        // TODO add your handling code here:
        clearSomeFields();
    }//GEN-LAST:event_styleBoxActionPerformed

    private void bedsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedsBoxActionPerformed
        // TODO add your handling code here:
        clearSomeFields();
    }//GEN-LAST:event_bedsBoxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        // if userID starts with "G" then back to DashboardGuest, with "R" then back to DashboardReceptionist, with "M" then back to DashboardManager
        if (userID.startsWith("G")) {
            new DashboardGuest(userID).setVisible(true);
        } else if (userID.startsWith("R")) {
            try {
                new DashboardReceptionist(userID).setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (userID.startsWith("M")) {
            try {
                new DashboardManager(userID).setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressFld;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> bedsBox;
    private javax.swing.JButton clearAllButton;
    private javax.swing.JButton createBookingButton;
    private javax.swing.JTextField emailFld;
    private com.toedter.calendar.JDateChooser endDateChooser;
    private javax.swing.JButton findRoomButton;
    private javax.swing.JTextField fullnameFld;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField phoneField;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField roomNumberField;
    private com.toedter.calendar.JDateChooser startDateChooser;
    private javax.swing.JComboBox<String> styleBox;
    // End of variables declaration//GEN-END:variables
}
